<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mybaits.ex.mapper.SysUserIdSnowMapper">
  <resultMap id="BaseResultMap" type="org.mybaits.ex.entity.SysUserIdSnow">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="head_image" jdbcType="VARCHAR" property="headImage" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, head_image, phone, sex, address
  </sql>
  <select id="selectByExample" parameterType="org.mybaits.ex.entity.SysUserIdSnowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user_id_snow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_user_id_snow
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user_id_snow
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.mybaits.ex.entity.SysUserIdSnowExample">
    delete from sys_user_id_snow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="org.mybaits.ex.entity.SysUserIdSnow">
    insert into sys_user_id_snow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="headImage != null">
        head_image,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.mybaits.ex.entity.SysUserIdSnowExample" resultType="java.lang.Long">
    select count(*) from sys_user_id_snow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_user_id_snow
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.headImage != null">
        head_image = #{record.headImage,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=CHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.mybaits.ex.entity.SysUserIdSnow">
    update sys_user_id_snow
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        head_image = #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateMapByExample" parameterType="map">
    update sys_user_id_snow
    <set>
      <foreach collection="map" index="key" item="val" separator=",">
        ${key} = #{val}
      </foreach>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into sys_user_id_snow
    <foreach collection="list" index="index" item="item">
      <if test="index==0">
        <trim prefix="(" suffix=")" suffixOverrides=",">
          id,
          user_name,
          head_image,
          phone,
          sex,
          address,
        </trim>
      </if>
    </foreach>
    values
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        #{item.id,jdbcType=BIGINT},
        #{item.userName,jdbcType=VARCHAR},
        #{item.headImage,jdbcType=VARCHAR},
        #{item.phone,jdbcType=CHAR},
        #{item.sex,jdbcType=TINYINT},
        #{item.address,jdbcType=VARCHAR},
      </trim>
    </foreach>
  </insert>
  <insert id="insertBatchSelect" parameterType="java.util.List">
    <foreach collection="list" index="index" item="item" separator=";">
      insert into sys_user_id_snow
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          id,
        </if>
        <if test="item.userName != null">
          user_name,
        </if>
        <if test="item.headImage != null">
          head_image,
        </if>
        <if test="item.phone != null">
          phone,
        </if>
        <if test="item.sex != null">
          sex,
        </if>
        <if test="item.address != null">
          address,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=BIGINT},
        </if>
        <if test="item.userName != null">
          #{item.userName,jdbcType=VARCHAR},
        </if>
        <if test="item.headImage != null">
          #{item.headImage,jdbcType=VARCHAR},
        </if>
        <if test="item.phone != null">
          #{item.phone,jdbcType=CHAR},
        </if>
        <if test="item.sex != null">
          #{item.sex,jdbcType=TINYINT},
        </if>
        <if test="item.address != null">
          #{item.address,jdbcType=VARCHAR},
        </if>
      </trim>
    </foreach>
  </insert>
  <sql id="Option_Column_List">
    <foreach collection="options" item="item" separator=",">
      ${item}
    </foreach>
  </sql>
  <select id="selectOptionToList" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Option_Column_List" />
    from sys_user_id_snow
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectOptionToOne" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Option_Column_List" />
    from sys_user_id_snow
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>